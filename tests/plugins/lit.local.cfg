import lit.formats
import lit.util
import os
import sys
import platform
import string
import re
import subprocess
import glob

if (config.plugins_supported):
    config.available_features.add('Plugins')
    config.environment['LLVM_CONFIG'] = os.path.join(config.llvm_tools_dir, 'llvm-config')

    # Set feature that tells us that the just-built LDC is ABI compatible with the host D compiler
    # For our tets, the required ABI compatibility seems OK since at least LDC 1.30.
    # If the compiler is built not by LDC but another compiler, then assume the ABI to be incompatible.
    command = [config.ldc2_bin, '--version']
    p = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    text1 = p.stdout.readline() # Ex.: "LDC - the LLVM D compiler (1.33.0-git-716f627)"
    text2 = p.stdout.readline() # Ex.: "  based on DMD v2.103.1 and LLVM 14.0.0"
    text3 = p.stdout.readline() # Ex.: "  built with LDC - the LLVM D compiler (1.33.0-beta2)"
    host_version = re.compile('  built with LDC.* \\(1\\.([0-9]+).*\\)').match(text3)
    if (host_version and int(host_version.group(1)) >= 30): # 30 = LDC 1.30
        config.available_features.add('ABI_compatible_with_host_D')


