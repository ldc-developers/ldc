import os
import platform
import re

# Add "ASan", "TSan" and "Fuzzer" feature if the runtime library is available.
sys = platform.system()
for file in os.listdir(config.ldc2_lib_dir):
    m = re.match('.*asan.*', file)
    if m is not None:
        config.available_features.add('ASan')
        continue
    # FreeBSD TSan needs https://reviews.llvm.org/D85292,
    # Linux TSan currently only works with static druntime.
    if (sys != 'FreeBSD') and not (sys == 'Linux' and config.shared_rt_libs_only):
        m = re.match('.*tsan.*', file)
        if m is not None:
            config.available_features.add('TSan')
            continue
    m = re.match('.*(F|f)uzzer.*', file)
    if m is not None:
        config.available_features.add('Fuzzer')
        continue
if 'ASan' in config.available_features:
    # On Darwin, ASan defaults to `abort_on_error=1`, which would make tests run
    # much slower. Let's override this and run lit tests with 'abort_on_error=0'.
    # Also, make sure we do not overwhelm the syslog while testing.
    default_asan_options = 'abort_on_error=0:log_to_syslog=0'
    config.environment['ASAN_OPTIONS'] = default_asan_options
    # And add a convenience substitution so we can append to the default ASAN_OPTIONS
    config.substitutions.append(('%env_asan_opts=',
                                 'env ASAN_OPTIONS=' + default_asan_options + ':'))

# Add the %deflake substitution, to help with flaky tests.
# Usage: "%deflake <count> <program>", runs <program> a maximum of <count> times until a failure occurs.
config.substitutions.append( ("%deflake", os.path.join(os.path.dirname(__file__), "deflake.bash")))
