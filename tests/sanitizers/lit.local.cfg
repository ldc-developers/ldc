import os
import platform
import re

# Add "ASan" and "Fuzzer" feature if the runtime library is available.
# On Windows, the ASan library is apparently quite fragile and only works
# with certain versions of Microsoft's runtime.
if (platform.system() == 'Darwin') or (platform.system() == 'Linux'):
    for file in os.listdir(config.ldc2_lib_dir):
        m = re.match('.*asan.*', file)
        if m is not None:
            config.available_features.add('ASan')
            continue
        m = re.match('.*(F|f)uzzer.*', file)
        if m is not None:
            config.available_features.add('Fuzzer')
            continue
if 'ASan' in config.available_features:
    # On Darwin, ASan defaults to `abort_on_error=1`, which would make tests run
    # much slower. Let's override this and run lit tests with 'abort_on_error=0'.
    # Also, make sure we do not overwhelm the syslog while testing.
    default_asan_options = 'abort_on_error=0:log_to_syslog=0'
    config.environment['ASAN_OPTIONS'] = default_asan_options
    # And add a convenience substitution so we can append to the default ASAN_OPTIONS
    config.substitutions.append(('%env_asan_opts=',
                                 'env ASAN_OPTIONS=' + default_asan_options + ':'))

# Note: To get line numbers in stack traces on Darwin, we need to run dsymutil on the binary,
# because llvm-symbolizer does not look at the object file for debug info.
# However, when llvm-symbolizer is not on the path we do get nice line information in the stack trace.
# But... on Linux, we _do_ need llvm-symbolizer on the path...
if (platform.system() == 'Linux'):
    path = os.path.pathsep.join( (config.environment['PATH'], config.llvm_tools_dir) )
    config.environment['PATH'] = path
