# Each step starts in the checked-out source directory,
# environment variables aren't persisted across steps.

steps:

- checkout: self
  submodules: false
  fetchDepth: 50

# Download x64 and x86 artifacts
- task: DownloadPipelineArtifact@2
  inputs:
    artifactName: windows-x64
    targetPath: artifacts
  displayName: Download x64 artifact
- task: DownloadPipelineArtifact@2
  inputs:
    artifactName: windows-x86
    targetPath: artifacts
  displayName: Download x86 artifact

# Extract & merge
- script: |
    if "%BUILD_SOURCEBRANCH:~0,10%" == "refs/tags/" (
      set ARTIFACT_ID=%BUILD_SOURCEBRANCH:~11%
    ) else (
      set ARTIFACT_ID=%BUILD_SOURCEVERSION:~0,8%
    )
    set ARTIFACT_NAME=ldc2-%ARTIFACT_ID%-windows-multilib
    :: Persist the ARTIFACT_{ID,NAME} env variables for future steps
    echo ##vso[task.setvariable variable=ARTIFACT_ID]%ARTIFACT_ID%
    echo ##vso[task.setvariable variable=ARTIFACT_NAME]%ARTIFACT_NAME%
    7z x artifacts/ldc2-*-x64.7z > nul
    7z x artifacts/ldc2-*-x86.7z > nul
    mv ldc2-*-x64 %ARTIFACT_NAME%
    cd %ARTIFACT_NAME%
    mv lib lib64
    cp -r ../ldc2-*-x86/lib .
    mv lib lib32
  displayName: Extract & merge artifacts
- powershell: |
    cd ldc2-*-multilib
    (cat etc\ldc2.conf).replace('%%ldcbinarypath%%/../lib', '%%ldcbinarypath%%/../lib64') | Set-Content etc\ldc2.conf
    $conf32 = cat ..\ldc2-*-x86\etc\ldc2.conf -Raw
    $conf32 = "`r`n""i[3-6]86-.*-windows-msvc"":" + $conf32.Substring($conf32.IndexOf("`r`ndefault:") + 10)
    $conf32 = $conf32.Substring(0, $conf32.IndexOf("`r`n};`r`n") + 6)
    $conf32 = $conf32.Replace('%%ldcbinarypath%%/../lib', '%%ldcbinarypath%%/../lib32')
    Add-Content etc\ldc2.conf $conf32
    cat etc\ldc2.conf
  displayName: Merge ldc2.conf

# Smoke tests
- powershell: |
    $hello  = "void main() {`n"
    $hello += "  import std.process, std.stdio;`n"
    $hello += "  writefln(""Hello world, %d bits"", size_t.sizeof * 8);`n"
    $hello += "  assert(!environment.get(""VSINSTALLDIR""));`n"
    $hello += "}`n"
    echo "$hello" > hello.d
  displayName: Generate hello.d
- script: |
    echo on
    %ARTIFACT_NAME%\bin\ldc2 -v -mscrtlib=vcruntime140 -run hello.d || exit /b
    %ARTIFACT_NAME%\bin\ldc2 -v -mscrtlib=vcruntime140 -m32 -run hello.d
  displayName: Run 32/64-bit hello-world smoke test with internal toolchain
- script: |
    echo on
    %ARTIFACT_NAME%\bin\ldc2 -v -run hello.d || exit /b
    %ARTIFACT_NAME%\bin\ldc2 -v -m32 -run hello.d
  displayName: Run 32/64-bit hello-world smoke test with MSVC auto-detection

# Pack, build installer & publish artifacts
- script: |
    mkdir newArtifacts
    7z a -mx=9 newArtifacts/%ARTIFACT_NAME%.7z %ARTIFACT_NAME% > nul
  displayName: Pack
- script: |
    echo on
    "C:\Program Files (x86)\Inno Setup 6\iscc" "/O%CD%\newArtifacts" /DLDCVersion=%ARTIFACT_ID% "/DLDCDir=%CD%\%ARTIFACT_NAME%" packaging\windows_installer.iss
  displayName: Build installer
- publish: newArtifacts
  artifact: windows-multilib
