# Installs LDC and makes the installation portable.
#
# Required env vars:
# - ARCH
# - EXTRA_CMAKE_FLAGS_CROSS (optional)

steps:
- bash: |
    set -ex
    cd ..
    if [[ "$EXTRA_CMAKE_FLAGS_CROSS" != "" ]]; then
      mkdir -p install/bin
      cp build-$ARCH/bin/{ldc2,ldmd2,ldc-build-runtime,ldc-profdata,ldc-prune-cache} install/bin
      cp -R ldc-build-runtime.tmp/lib install
      cp build-$ARCH/lib/{libldc_rt.*,libLTO-ldc.dylib,LLVMgold-ldc.so} install/lib || true
      mkdir install/etc
      cp build-$ARCH/bin/ldc2_install.conf install/etc/ldc2.conf
      cp -R $BUILD_SOURCESDIRECTORY/packaging/bash_completion.d install/etc
      mkdir install/import
      cp -R $BUILD_SOURCESDIRECTORY/runtime/druntime/src/{core,etc,ldc,object.d,__builtins.di,importc.h} install/import
      cp bootstrap-ldc/runtime/import/ldc/gccbuiltins_*.di install/import/ldc
      cp -R $BUILD_SOURCESDIRECTORY/runtime/phobos/etc/c install/import/etc
      rm -rf install/import/etc/c/zlib
      cp -R $BUILD_SOURCESDIRECTORY/runtime/phobos/std install/import
    else
      export PATH="$PWD/ninja:$PATH"
      cd build
      ninja install > /dev/null
      cd ..
    fi
    cp $BUILD_SOURCESDIRECTORY/LICENSE install
    if [ "$CI_OS" = "windows" ]; then
      cp $BUILD_SOURCESDIRECTORY/packaging/README.txt install
    else
      cp $BUILD_SOURCESDIRECTORY/packaging/README install
    fi
    # Make portable
    absInstallDir="$PWD/install"
    if [ "$CI_OS" = "windows" ]; then
      # /d/a/1/install => D:/a/1/install
      absInstallDir=`cygpath -m "$absInstallDir"`
    fi
    perl -pi -e "s|$absInstallDir/|%%ldcbinarypath%%/../|g" install/etc/ldc2.conf
    cat install/etc/ldc2.conf
    # Now rename the installation dir to test portability
    mv install installed
  displayName: Install LDC & make portable
