# Cross-compiles the macOS/arm64 and iOS/{arm64,x86_64} default libraries,
# copies them to the install dir and extends ldc2.conf.
#
# Required env vars:
# - IOS_DEPLOYMENT_TARGET
# - PARALLEL_JOBS

steps:
- script: |
    set -ex
    cd ..
    export PATH="$PWD/ninja:$PATH"
    triple_arm64="arm64-apple-macos"
    triple_ios_arm64="arm64-apple-ios$IOS_DEPLOYMENT_TARGET"
    triple_ios_x64="x86_64-apple-ios$IOS_DEPLOYMENT_TARGET"
    build/bin/ldc-build-runtime --ninja -j $PARALLEL_JOBS \
      --buildDir=build-libs-arm64 \
      --dFlags="-mtriple=$triple_arm64" \
      --ldcSrcDir=$BUILD_SOURCESDIRECTORY \
      CMAKE_OSX_ARCHITECTURES=arm64 \
      CMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
      BUILD_LTO_LIBS=ON
    build/bin/ldc-build-runtime --ninja -j $PARALLEL_JOBS \
      --buildDir=build-libs-ios-arm64 \
      --dFlags="-mtriple=$triple_ios_arm64" \
      --ldcSrcDir=$BUILD_SOURCESDIRECTORY \
      CMAKE_SYSTEM_NAME=iOS \
      CMAKE_OSX_ARCHITECTURES=arm64 \
      CMAKE_OSX_DEPLOYMENT_TARGET=$IOS_DEPLOYMENT_TARGET \
      BUILD_LTO_LIBS=ON
    build/bin/ldc-build-runtime --ninja -j $PARALLEL_JOBS \
      --buildDir=build-libs-ios-x86_64 \
      --dFlags="-mtriple=$triple_ios_x64" \
      --ldcSrcDir=$BUILD_SOURCESDIRECTORY \
      CMAKE_SYSTEM_NAME=iOS \
      CMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk \
      CMAKE_OSX_ARCHITECTURES=x86_64 \
      CMAKE_OSX_DEPLOYMENT_TARGET=$IOS_DEPLOYMENT_TARGET \
      BUILD_LTO_LIBS=ON
    mkdir installed/lib-{arm64,ios-arm64,ios-x86_64}
    cp -a build-libs-arm64/lib/*.{a,dylib} installed/lib-arm64
    cp -a build-libs-ios-arm64/lib/*.{a,dylib} installed/lib-ios-arm64
    cp -a build-libs-ios-x86_64/lib/*.{a,dylib} installed/lib-ios-x86_64
    sections="
    \"arm64-apple-macos\":
    {
        switches = [
            \"-defaultlib=phobos2-ldc,druntime-ldc\",
            \"-Xcc=-target\",
            \"-Xcc=$triple_arm64\",
            \"-Xcc=-isysroot\",
            \"-Xcc=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\",
        ];
        lib-dirs = [
            \"%%ldcbinarypath%%/../lib-arm64\",
        ];
        rpath = \"%%ldcbinarypath%%/../lib-arm64\";
    };
    
    \"arm64-apple-ios\":
    {
        switches = [
            \"-defaultlib=phobos2-ldc,druntime-ldc\",
            \"-Xcc=-target\",
            \"-Xcc=$triple_ios_arm64\",
            \"-Xcc=-miphoneos-version-min=$IOS_DEPLOYMENT_TARGET\",
            \"-Xcc=-isysroot\",
            \"-Xcc=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk\",
        ];
        lib-dirs = [
            \"%%ldcbinarypath%%/../lib-ios-arm64\",
        ];
        rpath = \"%%ldcbinarypath%%/../lib-ios-arm64\";
    };
    
    \"x86_64-apple-ios\":
    {
        switches = [
            \"-defaultlib=phobos2-ldc,druntime-ldc\",
            \"-Xcc=-target\",
            \"-Xcc=$triple_ios_x64\",
            \"-Xcc=-miphoneos-version-min=$IOS_DEPLOYMENT_TARGET\",
            \"-Xcc=-isysroot\",
            \"-Xcc=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk\",
        ];
        lib-dirs = [
            \"%%ldcbinarypath%%/../lib-ios-x86_64\",
        ];
        rpath = \"%%ldcbinarypath%%/../lib-ios-x86_64\";
    };"
    echo "$sections" >> installed/etc/ldc2.conf
    cat installed/etc/ldc2.conf
  displayName: 'Cross-compile macOS/arm64 and iOS/{arm64,x86_64} default libraries, copy to install dir and extend ldc2.conf'
