name: Install LDC & make portable
inputs:
  arch:
    required: false # Windows only
  cross_compiling:
    required: false
    default: false
runs:
  using: composite
  steps:

    - name: Install LDC # into ../install/
      shell: bash
      run: |
        set -eux
        cd ..

        if [[ '${{ inputs.cross_compiling }}' != true ]]; then
          ninja -C build install >/dev/null
        else
          # the cross-compiled runtime libs have already been installed:
          # * lib/: runtime library artifacts
          # * etc/ldc2.conf

          # now extend by installing the cross-compiled compiler:
          # * bin/: executables
          # * lib/: LTO plugin and compiler-rt libs
          # * etc/bash_completion.d/
          # * import/: all runtime imports except for ldc/gccbuiltins_*.di
          ninja -C build-cross install

          # copy gccbuiltins from bootstrap compiler
          cp bootstrap-ldc/import/ldc/gccbuiltins_*.di install/import/ldc/
        fi

        cp ldc/LICENSE install/
        if [[ '${{ runner.os }}' == Windows ]]; then
          cp ldc/packaging/README.txt install/
        else
          cp ldc/packaging/README install/
        fi

    - name: Make portable
      shell: bash
      run: |
        set -eux
        cd ..
        absInstallDir="$PWD/install"
        if [[ '${{ runner.os }}' == Windows ]]; then
          # /d/a/1/install => D:/a/1/install
          absInstallDir=$(cygpath --mixed "$absInstallDir")
        fi
        perl -pi -e "s|$absInstallDir/|%%ldcbinarypath%%/../|g" install/etc/ldc2.conf
        cat install/etc/ldc2.conf

    - name: Rename the installation dir to test portability
      shell: bash
      run: mv ../install ../installed

    - name: 'Windows: Copy curl & MinGW-w64-based libs'
      if: runner.os == 'Windows'
      shell: bash
      run: |
        set -eux
        cd ..

        cp libcurl/ldc2/* installed/bin/

        curl -fL --retry 3 --max-time 60 -o mingw-w64-libs.7z \
          https://github.com/ldc-developers/mingw-w64-libs/releases/download/v8.0.0/mingw-w64-libs-v8.0.0.7z
        mkdir mingw-w64-libs
        cd mingw-w64-libs
        7z x ../mingw-w64-libs.7z >/dev/null
        rm ../mingw-w64-libs.7z

        if [[ '${{ inputs.arch }}' == x86 ]]; then
          model=32
        else
          model=64
        fi
        cp -r "lib$model" ../installed/lib/mingw
