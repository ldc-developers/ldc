name: Merge x86_64 & arm64 packages to universal one
runs:
  using: composite
  steps:

    - name: Download x86_64 and arm64 artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: osx-*
        path: artifacts/
        merge-multiple: true # place all files into artifacts/ directly

    - name: Extract & merge artifacts
      shell: bash
      run: |
        set -euxo pipefail

        mkdir ldc2-{x86_64,arm64}
        tar -xf artifacts/ldc2-*-x86_64.tar.xz --strip 1 -C ldc2-x86_64
        tar -xf artifacts/ldc2-*-arm64.tar.xz  --strip 1 -C ldc2-arm64

        cp -R ldc2-x86_64 ldc2-universal
        cd ldc2-universal

        # rename/copy lib dirs
        mv lib                            lib-x86_64
        cp -R ../ldc2-arm64/lib           lib-arm64
        cp -R ../ldc2-arm64/lib-ios-arm64 ./
        cp -R ../ldc2-arm64/lib-ios-simulator-arm64 ./

        # merge executables to universal ones
        for exe in bin/*; do
          rm $exe
          lipo -create -output $exe ../ldc2-x86_64/$exe ../ldc2-arm64/$exe
        done

        # merge LTO plugins to universal one (and keep in hardcoded lib/)
        mkdir lib
        lipo -create -output lib/libLTO.dylib lib-x86_64/libLTO.dylib lib-arm64/libLTO.dylib
        rm lib-{x86_64,arm64}/libLTO.dylib

        # ldc2.conf:

        # 1) x86_64 iOS-simulator: already present (55-target-ios-simulator-x86_64.conf)
        # 2) arm64 iOS and iOS-simulator
        cp ../ldc2-arm64/etc/ldc2.conf/55-target-ios*-arm64.conf etc/ldc2.conf/
        # 3) x86_64 & arm64 macOS
        rm etc/ldc2.conf/50-target-default.conf # the original x86_64 config
        for arch in x86_64 arm64; do
          cat > etc/ldc2.conf/50-target-default-${arch}.conf <<EOF
        "${arch}-apple-":
        {
            lib-dirs = [
                "%%ldcbinarypath%%/../lib-${arch}",
            ];
            rpath = "%%ldcbinarypath%%/../lib-${arch}";
        };
        EOF
        done

        cat etc/ldc2.conf/*

    - name: Run x86_64/arm64 macOS/iOS cross-compilation smoke tests
      shell: bash
      run: |
        set -eux
        echo 'void main() { import std.stdio; writefln("Hello world, %d bits", size_t.sizeof * 8); }' > hello.d
        for triple in x86_64-apple-macos11.0 arm64-apple-macos11.0 x86_64-apple-ios12.0-simulator arm64-apple-ios12.0-simulator arm64-apple-ios12.0; do
          ldc2-universal/bin/ldc2 -mtriple="$triple" hello.d
          ldc2-universal/bin/ldc2 -mtriple="$triple" hello.d -link-defaultlib-shared
          ldc2-universal/bin/ldc2 -mtriple="$triple" hello.d -O -flto=full -defaultlib=phobos2-ldc-lto,druntime-ldc-lto
        done

    - name: Pack universal package
      shell: bash
      run: |
        set -eux
        mkdir newArtifacts

        if [[ '${{ github.ref }}' = refs/tags/v* ]]; then
          artifactID='${{ github.ref }}'
          artifactID="${artifactID:11}"
        else
          artifactID='${{ github.sha }}'
          artifactID="${artifactID:0:8}"
        fi

        artifactName="ldc2-$artifactID-osx-universal"
        mv ldc2-universal $artifactName
        chmod -R go=rX $artifactName
        sudo chown -R root:wheel $artifactName
        tar -cf - $artifactName | 7za a newArtifacts/$artifactName.tar.xz -si -txz -mx9

    - name: Upload universal package
      uses: actions/upload-artifact@v4
      with:
        name: osx-universal
        path: newArtifacts/
        compression-level: 0
