name: Build LDC & LDC D unittests & defaultlib unittest runners
inputs:
  cmake_flags:
    required: false
    default: ''
  extra_d_flags: # applying to the D executables, not the runtime
    required: false
    default: ''
  lto_mode: # full | thin | none
    required: false
    default: full
  arch:
    required: false # Windows only
runs:
  using: composite
  steps:

    - name: 'Posix: Build mimalloc'
      if: runner.os != 'Windows'
      uses: ./.github/actions/helper-mimalloc
      with:
        cmake_flags: >-
          "-DCMAKE_C_COMPILER=${{ runner.os != 'Windows' && '$PWD/../clang/bin/clang' || 'clang-cl' }}"
          "-DCMAKE_CXX_COMPILER=${{ runner.os != 'Windows' && '$PWD/../clang/bin/clang++' || 'clang-cl' }}"

    - name: Build LDC & LDC D unittests & defaultlib unittest runners
      uses: ./.github/actions/helper-build-ldc
      with:
        build_dir: build
        host_dc: ../bootstrap-ldc/bin/ldmd2
        specify_install_dir: true
        cmake_flags: >-
          ${{ inputs.cmake_flags }}
          "-DCMAKE_C_COMPILER=${{ runner.os != 'Windows' && '$PWD/../clang/bin/clang' || 'clang-cl' }}"
          "-DCMAKE_CXX_COMPILER=${{ runner.os != 'Windows' && '$PWD/../clang/bin/clang++' || 'clang-cl' }}"
        extra_d_flags: ${{ inputs.extra_d_flags }}
        with_mimalloc: ${{ runner.os != 'Windows' }}
        lto_mode: ${{ inputs.lto_mode }}
        with_pgo: true
        build_targets: all ldc2-unittest all-test-runners
        arch: ${{ inputs.arch }}

    - run: ../build/bin/ldc2 --version
      shell: bash
