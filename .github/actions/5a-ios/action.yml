name: 'macOS: Cross-compile iOS libraries, copy to install dir & extend ldc2.conf'
inputs:
  arch:
    required: true
  ios_deployment_target:
    required: false
    default: '12.0'
runs:
  using: composite
  steps:
    - shell: bash
      run: |
        set -eux
        cd ..

        arch='${{ inputs.arch }}'
        deployment_target='${{ inputs.ios_deployment_target }}'

        function add_runtime {
          local is_simulator="$1"

          local triple="$arch-apple-ios$deployment_target"
          local sysroot='/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk'
          local install_suffix="-ios-$arch"
          local triple_regex="$arch-apple-ios[^-]*\$"
          if [[ "$is_simulator" == 1 ]]; then
            triple+='-simulator'
            sysroot='/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk'
            install_suffix="-ios-simulator-$arch"
            triple_regex="$arch-apple-ios.*-simulator"
          fi

          install/bin/ldc-build-runtime --ninja \
            --dFlags="-mtriple=$triple" \
            --ldcSrcDir="$PWD/ldc" \
            --installWithSuffix="$install_suffix" \
            RT_CONF_TRIPLE_REGEX="$triple_regex" \
            CMAKE_SYSTEM_NAME=iOS \
            CMAKE_OSX_SYSROOT="$sysroot" \
            CMAKE_OSX_ARCHITECTURES="$arch" \
            CMAKE_OSX_DEPLOYMENT_TARGET="$deployment_target" \
            BUILD_LTO_LIBS=ON

          # append cross-compile flags to generated .conf file
          sed -i "" "s|^{\$|{\n    switches ~= [\n        \"-Xcc=-isysroot\",\n        \"-Xcc=${sysroot}\",\n    ];|" install/etc/ldc2.conf/55-target${install_suffix}.conf
        }

        if [[ "$arch" == arm64 ]]; then
          add_runtime 0  # ios-arm64
          add_runtime 1  # ios-simulator-arm64
        else
          add_runtime 1  # ios-simulator-x86_64
        fi

        cat install/etc/ldc2.conf/55-target-ios*.conf
